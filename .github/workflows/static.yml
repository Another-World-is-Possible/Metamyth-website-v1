# .github/workflows/deploy.yml

name: Build and Deploy Website

on:
  push:
    branches:
      - main

jobs:
  # --- Install and Cache Job ---
  # This job installs dependencies and then saves them to the GitHub cache.
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Use npm's cache, not the project's node_modules
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # This is the key change: Cache the node_modules directory
      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  # --- Build and Deploy Job ---
  # This job restores the cached dependencies and then builds and deploys.
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: install # Depends on the install job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Restore the cached node_modules directory
      - name: Restore cached node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      # If the cache wasn't found, install dependencies as a fallback
      - name: Install dependencies if cache missed
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build website
        run: npm run build
        env:
          CI: false

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist # IMPORTANT: Change this to your project's build output directory
