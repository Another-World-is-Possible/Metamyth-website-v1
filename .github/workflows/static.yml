# .github/workflows/deploy.yml

name: Build and Deploy Website

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # --- Install and Cache Job ---
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Cache node_modules
        id: cache-nodemodules
        # UPDATED to v4
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  # --- Build Job ---
  build:
    name: Build Website
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Restore cached node_modules
        id: cache-nodemodules
        # UPDATED to v4
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies if cache missed
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        run: npm run build
        env:
          CI: false
      - name: Upload artifact
        # UPDATED to v3
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the directory that your build script generates
          path: './dist'

  # --- Deploy Job ---
  deploy:
    name: Deploy to Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
